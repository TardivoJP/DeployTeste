[{"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\index.js":"1","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\App.js":"2","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Home\\index.js":"3","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Cliente\\VisualizarCliente\\index.js":"4","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\components\\Menu.js":"5","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Servico\\VisualizarServico\\index.js":"6","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Pedido\\VisualizarPedido\\index.js":"7","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\config\\index.js":"8","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Servico\\Servico\\index.js":"9","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Cliente\\Cliente\\index.js":"10","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Pedido\\Pedido\\index.js":"11","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Servico\\Cadastrar\\index.js":"12","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Servico\\Editar\\index.js":"13","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Cliente\\Editar\\index.js":"14","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Cliente\\Cadastrar\\index.js":"15","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Pedido\\Editar\\index.js":"16","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Pedido\\Cadastrar\\index.js":"17","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\index.js":"18","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\App.js":"19","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\components\\Menu.js":"20","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Home\\index.js":"21","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Cliente\\Cadastrar\\index.js":"22","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Cliente\\Cliente\\index.js":"23","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Pedido\\Editar\\index.js":"24","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Cliente\\Editar\\index.js":"25","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Pedido\\Pedido\\index.js":"26","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Servico\\Cadastrar\\index.js":"27","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Pedido\\Cadastrar\\index.js":"28","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Pedido\\VisualizarPedido\\index.js":"29","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Cliente\\VisualizarCliente\\index.js":"30","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Servico\\VisualizarServico\\index.js":"31","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Servico\\Servico\\index.js":"32","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Servico\\Editar\\index.js":"33","G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\config\\index.js":"34","F:\\DeployTeste\\src\\index.js":"35","F:\\DeployTeste\\src\\App.js":"36","F:\\DeployTeste\\src\\components\\Menu.js":"37","F:\\DeployTeste\\src\\pages(view)\\Home\\index.js":"38","F:\\DeployTeste\\src\\pages(view)\\Cliente\\VisualizarCliente\\index.js":"39","F:\\DeployTeste\\src\\pages(view)\\Cliente\\Editar\\index.js":"40","F:\\DeployTeste\\src\\pages(view)\\Cliente\\Cliente\\index.js":"41","F:\\DeployTeste\\src\\pages(view)\\Pedido\\Pedido\\index.js":"42","F:\\DeployTeste\\src\\pages(view)\\Pedido\\VisualizarPedido\\index.js":"43","F:\\DeployTeste\\src\\pages(view)\\Servico\\Servico\\index.js":"44","F:\\DeployTeste\\src\\pages(view)\\Cliente\\Cadastrar\\index.js":"45","F:\\DeployTeste\\src\\pages(view)\\Servico\\VisualizarServico\\index.js":"46","F:\\DeployTeste\\src\\pages(view)\\Pedido\\Editar\\index.js":"47","F:\\DeployTeste\\src\\pages(view)\\Servico\\Cadastrar\\index.js":"48","F:\\DeployTeste\\src\\pages(view)\\Servico\\Editar\\index.js":"49","F:\\DeployTeste\\src\\pages(view)\\Pedido\\Cadastrar\\index.js":"50","F:\\DeployTeste\\src\\config\\index.js":"51"},{"size":244,"mtime":1630691967964,"results":"52","hashOfConfig":"53"},{"size":2030,"mtime":1631245705813,"results":"54","hashOfConfig":"53"},{"size":6292,"mtime":1631478962361,"results":"55","hashOfConfig":"53"},{"size":11264,"mtime":1631478655288,"results":"56","hashOfConfig":"53"},{"size":1468,"mtime":1631306379278,"results":"57","hashOfConfig":"53"},{"size":13220,"mtime":1631479168855,"results":"58","hashOfConfig":"53"},{"size":13118,"mtime":1631479082448,"results":"59","hashOfConfig":"53"},{"size":41,"mtime":1630688474909,"results":"60","hashOfConfig":"53"},{"size":14394,"mtime":1631478219919,"results":"61","hashOfConfig":"53"},{"size":15023,"mtime":1631478260425,"results":"62","hashOfConfig":"53"},{"size":17093,"mtime":1631478225892,"results":"63","hashOfConfig":"53"},{"size":5812,"mtime":1631478222262,"results":"64","hashOfConfig":"53"},{"size":11064,"mtime":1631478221609,"results":"65","hashOfConfig":"53"},{"size":12629,"mtime":1631478254487,"results":"66","hashOfConfig":"53"},{"size":6760,"mtime":1631478265319,"results":"67","hashOfConfig":"53"},{"size":12154,"mtime":1631478232662,"results":"68","hashOfConfig":"53"},{"size":6456,"mtime":1631478237115,"results":"69","hashOfConfig":"53"},{"size":244,"mtime":1630691967964,"results":"70","hashOfConfig":"71"},{"size":2030,"mtime":1631245705813,"results":"72","hashOfConfig":"71"},{"size":1468,"mtime":1631306379278,"results":"73","hashOfConfig":"71"},{"size":6292,"mtime":1631478962361,"results":"74","hashOfConfig":"71"},{"size":6760,"mtime":1631478265319,"results":"75","hashOfConfig":"71"},{"size":15023,"mtime":1631478260425,"results":"76","hashOfConfig":"71"},{"size":12154,"mtime":1631478232662,"results":"77","hashOfConfig":"71"},{"size":12629,"mtime":1631478254487,"results":"78","hashOfConfig":"71"},{"size":17093,"mtime":1631478225892,"results":"79","hashOfConfig":"71"},{"size":5812,"mtime":1631478222262,"results":"80","hashOfConfig":"71"},{"size":6456,"mtime":1631478237115,"results":"81","hashOfConfig":"71"},{"size":13005,"mtime":1631497249633,"results":"82","hashOfConfig":"71"},{"size":11264,"mtime":1631478655288,"results":"83","hashOfConfig":"71"},{"size":13206,"mtime":1631497179617,"results":"84","hashOfConfig":"71"},{"size":14394,"mtime":1631478219919,"results":"85","hashOfConfig":"71"},{"size":11064,"mtime":1631478221609,"results":"86","hashOfConfig":"71"},{"size":41,"mtime":1630688474909,"results":"87","hashOfConfig":"71"},{"size":244,"mtime":1630691967964,"results":"88","hashOfConfig":"89"},{"size":2030,"mtime":1631245705813,"results":"90","hashOfConfig":"89"},{"size":1468,"mtime":1631306379278,"results":"91","hashOfConfig":"89"},{"size":6292,"mtime":1631478962361,"results":"92","hashOfConfig":"89"},{"size":11264,"mtime":1631478655288,"results":"93","hashOfConfig":"89"},{"size":12629,"mtime":1631478254487,"results":"94","hashOfConfig":"89"},{"size":15023,"mtime":1631478260425,"results":"95","hashOfConfig":"89"},{"size":17093,"mtime":1631478225892,"results":"96","hashOfConfig":"89"},{"size":13005,"mtime":1631497249633,"results":"97","hashOfConfig":"89"},{"size":14394,"mtime":1631478219919,"results":"98","hashOfConfig":"89"},{"size":6760,"mtime":1631478265319,"results":"99","hashOfConfig":"89"},{"size":13206,"mtime":1631497179617,"results":"100","hashOfConfig":"89"},{"size":12154,"mtime":1631478232662,"results":"101","hashOfConfig":"89"},{"size":5812,"mtime":1631478222262,"results":"102","hashOfConfig":"89"},{"size":11064,"mtime":1631478221609,"results":"103","hashOfConfig":"89"},{"size":6456,"mtime":1631478237115,"results":"104","hashOfConfig":"89"},{"size":61,"mtime":1631542159124,"results":"105","hashOfConfig":"89"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"rik05e",{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},"zm5vtr",{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"147"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"147"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"147"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"147"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a6wqax",{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\index.js",[],["216","217"],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\App.js",[],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Home\\index.js",[],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Cliente\\VisualizarCliente\\index.js",["218"],"import '../../../App.css';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Alert, Container, Table } from \"reactstrap\";\r\n\r\nimport { api } from '../../../config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAddressCard } from '@fortawesome/free-solid-svg-icons';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nlibrary.add(faAddressCard);\r\n\r\nexport const VisualizarCliente = () => {\r\n\r\n    const [bitaoDeleteIsVisible, setBitaoDeleteIsVisible] = useState(true);\r\n    const [bitaoDeleteSimIsVisible, setBitaoDeleteSimIsVisible] = useState(true);\r\n    const [bitaoDeleteNaoIsVisible, setBitaoDeleteNaoIsVisible] = useState(true);\r\n    const [bitaoDeleteCtzaIsVisible, setBitaoDeleteCtzaIsVisible] = useState(true);\r\n\r\n    function mudarBitaoDeleteInvisivel() { setBitaoDeleteIsVisible(!bitaoDeleteIsVisible) }\r\n    function mudarBitaoDeleteSimInvisivel() { setBitaoDeleteSimIsVisible(!bitaoDeleteSimIsVisible) }\r\n    function mudarBitaoDeleteNaoInvisivel() { setBitaoDeleteNaoIsVisible(!bitaoDeleteNaoIsVisible) }\r\n    function mudarBitaoDeleteCtzaInvisivel() { setBitaoDeleteCtzaIsVisible(!bitaoDeleteCtzaIsVisible) }\r\n\r\n    function juntarFunctions() {\r\n        mudarBitaoDeleteInvisivel();\r\n        mudarBitaoDeleteSimInvisivel();\r\n        mudarBitaoDeleteNaoInvisivel();\r\n        mudarBitaoDeleteCtzaInvisivel();\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [numClientes, setNumClientes] = useState([]);\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    const getClientes = async () => {\r\n        await axios.get(api + radio)\r\n            .then((response) => {\r\n                setData(response.data.clientes);\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível conectar a API.'\r\n                })\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getNumClientes = async () => {\r\n            await axios.get(api + \"/numclientes\")\r\n                .then((response) => {\r\n                    setNumClientes(response.data.clientes);\r\n                })\r\n                .catch(() => {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        message: 'Erro: Não foi possível conectar a API.'\r\n                    })\r\n                });\r\n        }\r\n        getNumClientes();\r\n    },[]);\r\n\r\n\r\n    const apagarCliente = async (idCliente) => {\r\n        console.log(idCliente);\r\n\r\n        juntarFunctions();\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        await axios.delete(api + \"/apagarcliente/\" + idCliente, { headers })\r\n            .then((response) => {\r\n                console.log(response.data.error);\r\n                getClientes();\r\n            }).catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível acessar a API.'\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getClientes();\r\n    }, []);\r\n\r\n\r\n    const [radio, setRadio] = useState(\"/listaclientes\");\r\n\r\n    while ((radio !== \"/listaclientes\") || (radio !== \"/listaclientesnome\") || (radio !== \"/listaclientescidade\") ||\r\n        (radio !== \"/listaclientesuf\") || (radio !== \"/listaclientesidade\")) {\r\n        getClientes();\r\n        break;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <div className=\"w-100 d-flex justify-content-center align-items-center\" style={{ marginTop: '2.5%' }}>\r\n                    <div className=\"w-75 p-4 border d-flex justify-content-center align-items-center headerTabela cor-branca\">\r\n                        <div className=\"w-100 d-flex p-2 justify-content-center align-items-center\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon=\"address-card\" className=\"fonte-responsiva-icon\" style={{ color: 'var(--azul)' }} />\r\n                            </div>\r\n                            <div style={{ marginLeft: '5%', fontSize: 'var(--fontegrande)' }}>\r\n                                Tabela dos Clientes\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"p-2 d-flex justify-content-center\" style={{ marginTop: '2.5%' }}>\r\n                    <div className=\"p-2\">\r\n                        <label className=\"btn btn-outline-primary disabled\" htmlFor=\"option1\">Ordenar por</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option1\" autoComplete=\"off\"\r\n                            checked={radio === \"/listaclientes\"} value=\"/listaclientes\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option1\">ID</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option2\" autoComplete=\"off\"\r\n                            checked={radio === \"/listaclientesnome\"} value=\"/listaclientesnome\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option2\">Nome</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option3\" autoComplete=\"off\"\r\n                            checked={radio === \"/listaclientescidade\"} value=\"/listaclientescidade\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option3\">Cidade</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option4\" autoComplete=\"off\"\r\n                            checked={radio === \"/listaclientesuf\"} value=\"/listaclientesuf\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option4\">UF</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option5\" autoComplete=\"off\"\r\n                            checked={radio === \"/listaclientesidade\"} value=\"/listaclientesidade\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option5\">Nascimento</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"p-2 d-flex flex-column\">\r\n                    {status.type === 'error' ? <Alert color=\"danger\">{status.message}</Alert> : \"\"}\r\n                    <Table striped dark hover>\r\n                        <thead>\r\n                            <tr className=\"text-center\">\r\n                                <th>ID</th>\r\n                                <th>Nome</th>\r\n                                <th>Endereço</th>\r\n                                <th>Cidade</th>\r\n                                <th>UF</th>\r\n                                <th>Nascimento</th>\r\n                                <th>Criado em</th>\r\n                                <th colSpan=\"3\">Ações</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.map(item => (\r\n                                <tr className=\"text-center\" key={item.id}>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.nome}</td>\r\n                                    <td>{item.endereco}</td>\r\n                                    <td>{item.cidade}</td>\r\n                                    <td>{item.uf}</td>\r\n                                    <td>{item.nascimento}</td>\r\n                                    <td>{item.createdAt}</td>\r\n                                    <td>\r\n                                        <Link to={\"/cliente/\" + item.id} className=\"btn btn-outline-primary btn-sm\">Consultar</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link to={\"/editarcliente/\" + item.id} className=\"btn btn-outline-warning btn-sm\">Editar</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span onClick={juntarFunctions} className={bitaoDeleteIsVisible ? \"btn btn-outline-danger btn-sm\"\r\n                                            : \"btn btn-outline-danger btn-sm d-none\"}>Deletar</span>\r\n\r\n                                        <span className={bitaoDeleteCtzaIsVisible ? \"btn btn-outline-danger btn-sm disabled d-none\"\r\n                                            : \"btn btn-outline-danger btn-sm disabled\"}>Tem certeza?</span>\r\n\r\n                                        <span onClick={() => apagarCliente(item.id)} className={bitaoDeleteSimIsVisible ? \"btn btn-outline-danger btn-sm d-none\"\r\n                                            : \"btn btn-outline-danger btn-sm\"} style={{ marginLeft: '0.5rem' }}>Sim</span>\r\n\r\n                                        <span onClick={juntarFunctions} className={bitaoDeleteNaoIsVisible ? \"btn btn-outline-success btn-sm d-none\"\r\n                                            : \"btn btn-outline-success btn-sm\"} style={{ marginLeft: '0.5rem' }}>Não</span>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <div className=\"text-center fonte-responsiva-pequena\">\r\n                        <span className=\"cor-texto-azul\">Número de clientes</span> - {numClientes}\r\n                    </div>\r\n\r\n                    <div className=\"p-2 d-flex justify-content-center\">\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/cadastrarcliente\" className=\"btn btn-outline-success btn-lg\">Criar novo cliente</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\" style={{ marginBottom: '2%' }}>\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/\" className=\"btn btn-outline-primary btn-lg\">Voltar</a>\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/visualizarservico\" className=\"btn btn-outline-primary btn-lg\">Serviços</a>\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/visualizarpedido\" className=\"btn btn-outline-primary btn-lg\">Pedidos</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\components\\Menu.js",[],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Servico\\VisualizarServico\\index.js",["219"],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Pedido\\VisualizarPedido\\index.js",["220"],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\config\\index.js",[],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Servico\\Servico\\index.js",["221"],"import '../../../App.css';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Alert, Container, Table } from 'reactstrap';\r\nimport { api } from '../../../config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFunnelDollar, faPoll, faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nlibrary.add(faFunnelDollar, faPoll, faTrashAlt, faPencilAlt);\r\n\r\nexport const Servico = (props) => {\r\n    console.log(props.match.params.id);\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [dataServicoPedidos, setDataServicoPedidos] = useState([]);\r\n\r\n    const [dataClientes, setDataClientes] = useState([]);\r\n\r\n    const [nome, setNome] = useState('');\r\n    const [servicoLucroBruto, setServicoLucroBruto] = useState('');\r\n\r\n    const [tabelaPedidosIsVisible, setTabelaPedidosIsVisible] = useState(true);\r\n    const [msgNaoTemPedidosIsVisible, setMsgNaoTemPedidosIsVisible] = useState(true);\r\n\r\n    const [id] = useState(props.match.params.id);\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        const getServico = async () => {\r\n            await axios.get(api + \"/servico/\" + id)\r\n                .then((response) => {\r\n                    console.log(response.data.servico);\r\n                    setData(response.data.servico);\r\n                    setNome(response.data.servico.nome);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                })\r\n        }\r\n        getServico();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        const getServicoLucroBruto = async () => {\r\n            await axios.get(api + \"/servicolucroubruto/\" + id)\r\n                .then((response) => {\r\n                    setServicoLucroBruto(response.data.totalLucroBrutoServico);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                })\r\n        }\r\n        getServicoLucroBruto();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        const getServicoPedidos = async () => {\r\n            await axios.get(api + \"/listarpedidoss/\" + id)\r\n                .then((response) => {\r\n                    let temPedido = (response.data.pedidos);\r\n                    if (temPedido.length === 0) {\r\n                        setTabelaPedidosIsVisible(!tabelaPedidosIsVisible);\r\n                    } else {\r\n                        setMsgNaoTemPedidosIsVisible(!msgNaoTemPedidosIsVisible);\r\n                    }\r\n                    console.log(response.data.pedidos);\r\n                    setDataServicoPedidos(response.data.pedidos);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                    setStatus({\r\n                        type: 'error',\r\n                        message: 'Erro: Não foi possível conectar a API.'\r\n                    })\r\n                })\r\n        }\r\n        getServicoPedidos();\r\n    }, [id]);\r\n\r\n    const getClientes = async () => {\r\n        await axios.get(api + \"/listaclientes\")\r\n            .then((response) => {\r\n                console.log(response.data.clientes);\r\n                setDataClientes(response.data.clientes);\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível conectar a API.'\r\n                })\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getClientes();\r\n    }, []);\r\n\r\n\r\n    var x = 0;\r\n    var y = 0;\r\n\r\n    var i = dataServicoPedidos.length;\r\n    var j = dataClientes.length;\r\n\r\n    if ((dataServicoPedidos[x] !== undefined) && (dataClientes[y] !== undefined)) {\r\n        while (x < i) {\r\n            while (y < j) {\r\n                if (dataServicoPedidos[x].ClienteId === dataClientes[y].id) {\r\n                    dataServicoPedidos[x].nomeCliente = dataClientes[y].nome;\r\n                }\r\n                y++;\r\n            }\r\n            y = 0;\r\n            x++;\r\n        }\r\n    }\r\n\r\n\r\n    const [bitaoDeleteIsVisible, setBitaoDeleteIsVisible] = useState(true);\r\n    const [bitaoDeleteSimIsVisible, setBitaoDeleteSimIsVisible] = useState(true);\r\n    const [bitaoDeleteNaoIsVisible, setBitaoDeleteNaoIsVisible] = useState(true);\r\n    const [bitaoDeleteCtzaIsVisible, setBitaoDeleteCtzaIsVisible] = useState(true);\r\n\r\n    function mudarBitaoDeleteInvisivel() { setBitaoDeleteIsVisible(!bitaoDeleteIsVisible) }\r\n    function mudarBitaoDeleteSimInvisivel() { setBitaoDeleteSimIsVisible(!bitaoDeleteSimIsVisible) }\r\n    function mudarBitaoDeleteNaoInvisivel() { setBitaoDeleteNaoIsVisible(!bitaoDeleteNaoIsVisible) }\r\n    function mudarBitaoDeleteCtzaInvisivel() { setBitaoDeleteCtzaIsVisible(!bitaoDeleteCtzaIsVisible) }\r\n\r\n    function juntarFunctions() {\r\n        mudarBitaoDeleteInvisivel();\r\n        mudarBitaoDeleteSimInvisivel();\r\n        mudarBitaoDeleteNaoInvisivel();\r\n        mudarBitaoDeleteCtzaInvisivel();\r\n    }\r\n\r\n    const [voltarTabela, setVoltarTabela] = useState({\r\n        redirect: false\r\n    });\r\n\r\n    const apagarServico = async (idServico) => {\r\n\r\n        juntarFunctions();\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        await axios.delete(api + \"/apagarservico/\" + idServico, { headers })\r\n            .then((response) => {\r\n                console.log(response.data.error);\r\n                setVoltarTabela({ redirect: true })\r\n            }).catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível acessar a API.'\r\n                })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {voltarTabela.redirect ? (<Redirect push to=\"/visualizarservico\" />) : null}\r\n            <Container>\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <div className=\"w-100 d-flex justify-content-center align-items-center\" style={{ marginTop: '1.5%', marginBottom: '2%' }}>\r\n                        <div className=\"w-75 p-4 border d-flex justify-content-center align-items-center headerTabela cor-branca\">\r\n                            <div className=\"w-100 d-flex p-2 justify-content-center align-items-center\">\r\n                                <div>\r\n                                    <FontAwesomeIcon icon=\"funnel-dollar\" className=\"fonte-responsiva-icon\" style={{ color: 'var(--azul)' }} />\r\n                                </div>\r\n                                <div className=\"fonte-responsiva\" style={{ marginLeft: '5%' }}>\r\n                                    {id} - {nome}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-2 d-flex justify-content-center\">\r\n                        <a href={\"/editarservico/\" + id} className=\"d-flex text-center align-items-center btn btn-outline-warning btn-lg\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon=\"pencil-alt\" className=\"fonte-responsiva-icon-pequena warning\" />\r\n                            </div>\r\n                            <div className=\"p-2 fonte-responsiva-pequena\">\r\n                                Editar este serviço\r\n                            </div>\r\n                        </a>\r\n\r\n                        <div className=\"d-flex justify-content-center align-items-center\" style={{ marginLeft: '0.75rem' }}>\r\n                            <span onClick={juntarFunctions} className={bitaoDeleteIsVisible ? \"d-flex text-center align-items-center btn btn-outline-danger btn-lg\"\r\n                                : \"d-flex text-center align-items-center btn btn-outline-danger btn-lg d-none\"}>\r\n                                <div>\r\n                                    <FontAwesomeIcon icon=\"trash-alt\" className=\"fonte-responsiva-icon-pequena danger\" />\r\n                                </div>\r\n                                <div className=\"p-2 fonte-responsiva-pequena\">\r\n                                    Excluir este serviço\r\n                                </div>\r\n                            </span>\r\n\r\n                            <span className={bitaoDeleteCtzaIsVisible ? \"btn btn-outline-danger btn-lg disabled d-none\"\r\n                                : \"btn btn-outline-danger btn-lg disabled\"}>Tem certeza?</span>\r\n\r\n                            <span onClick={() => apagarServico(id)} className={bitaoDeleteSimIsVisible ? \"btn btn-outline-danger btn-lg d-none\"\r\n                                : \"btn btn-outline-danger btn-lg\"} style={{ marginLeft: '0.5rem' }}>Sim</span>\r\n\r\n                            <span onClick={juntarFunctions} className={bitaoDeleteNaoIsVisible ? \"btn btn-outline-success btn-lg d-none\"\r\n                                : \"btn btn-outline-success btn-lg\"} style={{ marginLeft: '0.5rem' }}>Não</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"w-75 m-3 d-flex\">\r\n                        <div className=\"w-100 p-4 border d-flex headerTabela cor-branca\">\r\n                            <div className=\"w-100 d-flex flex-column p-2 text-center fonte-responsiva-pequena\">\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Nome</span> - {data.nome}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Descrição</span> - {data.descricao}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Data de criação</span> - {data.createdAt}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Total bruto recebido</span> - R$ {servicoLucroBruto}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={tabelaPedidosIsVisible ? \"p-5 d-flex flex-column tabelaPedidoClientes\"\r\n                        : \"p-5 d-flex flex-column d-none tabelaPedidoClientes\"}>\r\n                        {status.type === 'error' ? <Alert color=\"danger\">{status.message}</Alert> : \"\"}\r\n                        <div className=\"w-100 p-4 border d-flex justify-content-center align-items-center headerTabela cor-branca text-center\"\r\n                            style={{ marginBottom: '5%' }}>\r\n                            <div>\r\n                                <FontAwesomeIcon icon=\"poll\" className=\"fonte-responsiva-icon\" style={{ color: 'var(--azul)' }} />\r\n                            </div>\r\n                            <div className=\"fonte-responsiva\" style={{ marginLeft: '5%' }}>\r\n                                Pedidos deste serviço\r\n                            </div>\r\n                        </div>\r\n                        <Table striped dark hover>\r\n                            <thead>\r\n                                <tr className=\"text-center\">\r\n                                    <th>ID Pedido</th>\r\n                                    <th>ID Cliente</th>\r\n                                    <th>ID Serviço</th>\r\n                                    <th>Valor</th>\r\n                                    <th>Data</th>\r\n                                    <th>Ações</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {dataServicoPedidos.map(item => (\r\n                                    <tr key={item.id} className=\"text-center\">\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.ClienteId} - {item.nomeCliente}</td>\r\n                                        <td>{item.ServicoId} - {data.nome}</td>\r\n                                        <td>{item.valor}</td>\r\n                                        <td>{item.data}</td>\r\n                                        <td >\r\n                                            <Link to={\"/pedido/\" + item.id} className=\"btn btn-outline-primary btn-sm\">Consultar</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-center fonte-responsiva-pequena\">\r\n                            <span className=\"cor-texto-azul\">Valor total</span> - R$ {servicoLucroBruto}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={msgNaoTemPedidosIsVisible ? \"p-5 d-flex flex-column tabelaPedidoClientes\"\r\n                        : \"p-5 d-flex flex-column d-none tabelaPedidoClientes\"}>\r\n                        {status.type === 'error' ? <Alert color=\"danger\">{status.message}</Alert> : \"\"}\r\n                        <div className=\"w-100 p-4 border d-flex justify-content-center align-items-center headerTabela cor-branca text-center\"\r\n                            style={{ marginBottom: '5%' }}>\r\n                            <div>\r\n                                <FontAwesomeIcon icon=\"poll\" className=\"fonte-responsiva-icon\" style={{ color: 'var(--azul)' }} />\r\n                            </div>\r\n                            <div className=\"fonte-responsiva\" style={{ marginLeft: '5%' }}>\r\n                                Esse serviço não tem pedidos!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-2 d-flex justify-content-center\" style={{ marginBottom: '2%' }}>\r\n                        <div className=\"p-2\">\r\n                            <Link to=\"/visualizarservico\" className=\"btn btn-outline-primary btn-lg\">Voltar</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Cliente\\Cliente\\index.js",["222"],"import '../../../App.css';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Alert, Container, Table } from 'reactstrap';\r\nimport { api } from '../../../config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAddressCard, faPoll, faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nlibrary.add(faAddressCard, faPoll, faTrashAlt, faPencilAlt);\r\n\r\nexport const Cliente = (props) => {\r\n    console.log(props.match.params.id);\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [dataServicoPedidos, setDataServicoPedidos] = useState([]);\r\n\r\n    const [dataServicos, setDataServicos] = useState([]);\r\n\r\n    const [nome, setNome] = useState('');\r\n    const [clienteGastou, setClienteGastou] = useState('');\r\n\r\n    const [tabelaPedidosIsVisible, setTabelaPedidosIsVisible] = useState(true);\r\n    const [msgNaoTemPedidosIsVisible, setMsgNaoTemPedidosIsVisible] = useState(true);\r\n\r\n    const [id] = useState(props.match.params.id);\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        const getCliente = async () => {\r\n            await axios.get(api + \"/cliente/\" + id)\r\n                .then((response) => {\r\n                    setData(response.data.cliente);\r\n                    setNome(response.data.cliente.nome);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                })\r\n        }\r\n        getCliente();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        const getClienteGastou = async () => {\r\n            await axios.get(api + \"/clientegastou/\" + id)\r\n                .then((response) => {\r\n                    setClienteGastou(response.data.totalGastoCliente);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                })\r\n        }\r\n        getClienteGastou();\r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n        const getClientePedidos = async () => {\r\n            await axios.get(api + \"/listarpedidos/\" + id)\r\n                .then((response) => {\r\n                    let temPedido = (response.data.pedidos);\r\n                    if (temPedido.length === 0) {\r\n                        setTabelaPedidosIsVisible(!tabelaPedidosIsVisible);\r\n                    } else {\r\n                        setMsgNaoTemPedidosIsVisible(!msgNaoTemPedidosIsVisible);\r\n                    }\r\n                    console.log(response.data.pedidos);\r\n                    setDataServicoPedidos(response.data.pedidos);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                    setStatus({\r\n                        type: 'error',\r\n                        message: 'Erro: Não foi possível conectar a API.'\r\n                    })\r\n                })\r\n        }\r\n        getClientePedidos();\r\n    }, [id]);\r\n\r\n\r\n    const getServicos = async () => {\r\n        await axios.get(api + \"/listaservicos\")\r\n            .then((response) => {\r\n                setDataServicos(response.data.servicos);\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível conectar a API.'\r\n                })\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getServicos();\r\n    }, []);\r\n\r\n    var x = 0;\r\n    var z = 0;\r\n\r\n    var i = dataServicoPedidos.length;\r\n    var k = dataServicos.length;\r\n\r\n    console.log(dataServicoPedidos);\r\n    console.log(dataServicos);\r\n\r\n    if ((dataServicoPedidos[x] !== undefined) && (dataServicos[z] !== undefined)) {\r\n        while (x < i) {\r\n            while (z < k) {\r\n                if (dataServicoPedidos[x].ServicoId === dataServicos[z].id) {\r\n                    dataServicoPedidos[x].nomeServico = dataServicos[z].nome;\r\n                }\r\n                z++;\r\n            }\r\n\r\n            z = 0;\r\n            x++;\r\n        }\r\n    }\r\n\r\n\r\n    const [bitaoDeleteIsVisible, setBitaoDeleteIsVisible] = useState(true);\r\n    const [bitaoDeleteSimIsVisible, setBitaoDeleteSimIsVisible] = useState(true);\r\n    const [bitaoDeleteNaoIsVisible, setBitaoDeleteNaoIsVisible] = useState(true);\r\n    const [bitaoDeleteCtzaIsVisible, setBitaoDeleteCtzaIsVisible] = useState(true);\r\n\r\n    function mudarBitaoDeleteInvisivel() { setBitaoDeleteIsVisible(!bitaoDeleteIsVisible) }\r\n    function mudarBitaoDeleteSimInvisivel() { setBitaoDeleteSimIsVisible(!bitaoDeleteSimIsVisible) }\r\n    function mudarBitaoDeleteNaoInvisivel() { setBitaoDeleteNaoIsVisible(!bitaoDeleteNaoIsVisible) }\r\n    function mudarBitaoDeleteCtzaInvisivel() { setBitaoDeleteCtzaIsVisible(!bitaoDeleteCtzaIsVisible) }\r\n\r\n    function juntarFunctions() {\r\n        mudarBitaoDeleteInvisivel();\r\n        mudarBitaoDeleteSimInvisivel();\r\n        mudarBitaoDeleteNaoInvisivel();\r\n        mudarBitaoDeleteCtzaInvisivel();\r\n    }\r\n\r\n    const [voltarTabela, setVoltarTabela] = useState({\r\n        redirect: false\r\n    });\r\n\r\n    const apagarCliente = async (idCliente) => {\r\n        console.log(idCliente);\r\n\r\n        juntarFunctions();\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        await axios.delete(api + \"/apagarcliente/\" + idCliente, { headers })\r\n            .then((response) => {\r\n                console.log(response.data.error);\r\n                setVoltarTabela({ redirect: true })\r\n            }).catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível acessar a API.'\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {voltarTabela.redirect ? (<Redirect push to=\"/visualizarcliente\" />) : null}\r\n            <Container>\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <div className=\"w-100 d-flex justify-content-center align-items-center\" style={{ marginTop: '1.5%', marginBottom: '2%' }}>\r\n                        <div className=\"w-75 p-4 border d-flex justify-content-center align-items-center headerTabela cor-branca\">\r\n                            <div className=\"w-100 d-flex p-2 justify-content-center align-items-center\">\r\n                                <div>\r\n                                    <FontAwesomeIcon icon=\"address-card\" className=\"fonte-responsiva-icon\" style={{ color: 'var(--azul)' }} />\r\n                                </div>\r\n                                <div className=\"fonte-responsiva\" style={{ marginLeft: '5%' }}>\r\n                                    {id} - {nome}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-2 d-flex justify-content-center\">\r\n                        <a href={\"/editarcliente/\" + id} className=\"d-flex text-center align-items-center btn btn-outline-warning btn-lg\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon=\"pencil-alt\" className=\"fonte-responsiva-icon-pequena warning\" />\r\n                            </div>\r\n                            <div className=\"p-2 fonte-responsiva-pequena\">\r\n                                Editar este cliente\r\n                            </div>\r\n                        </a>\r\n\r\n                        <div className=\"d-flex justify-content-center align-items-center\" style={{ marginLeft: '0.75rem' }}>\r\n                            <span onClick={juntarFunctions} className={bitaoDeleteIsVisible ? \"d-flex text-center align-items-center btn btn-outline-danger btn-lg\"\r\n                                : \"d-flex text-center align-items-center btn btn-outline-danger btn-lg d-none\"}>\r\n                                <div>\r\n                                    <FontAwesomeIcon icon=\"trash-alt\" className=\"fonte-responsiva-icon-pequena danger\" />\r\n                                </div>\r\n                                <div className=\"p-2 fonte-responsiva-pequena\">\r\n                                    Excluir este cliente\r\n                                </div>\r\n                            </span>\r\n\r\n                            <span className={bitaoDeleteCtzaIsVisible ? \"btn btn-outline-danger btn-lg disabled d-none fonte-responsiva-pequena\"\r\n                                : \"btn btn-outline-danger btn-lg disabled fonte-responsiva-pequena\"}>Tem certeza?</span>\r\n\r\n                            <span onClick={() => apagarCliente(id)} className={bitaoDeleteSimIsVisible ? \"btn btn-outline-danger btn-lg d-none fonte-responsiva-pequena\"\r\n                                : \"btn btn-outline-danger btn-lg fonte-responsiva-pequena\"} style={{ marginLeft: '0.5rem' }}>Sim</span>\r\n\r\n                            <span onClick={juntarFunctions} className={bitaoDeleteNaoIsVisible ? \"btn btn-outline-success btn-lg d-none fonte-responsiva-pequena\"\r\n                                : \"btn btn-outline-success btn-lg fonte-responsiva-pequena\"} style={{ marginLeft: '0.5rem' }}>Não</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"w-75 m-3 d-flex\">\r\n                        <div className=\"w-100 p-4 border d-flex headerTabela cor-branca\">\r\n                            <div className=\"w-100 d-flex flex-column p-2 text-center fonte-responsiva-pequena\">\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Nome</span> - {data.nome}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Endereço</span> - {data.endereco}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Cidade</span> - {data.cidade}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">UF</span> - {data.uf}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Nascimento</span> - {data.nascimento}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Data de criação</span> - {data.createdAt}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Total gasto</span> - R$ {clienteGastou}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={tabelaPedidosIsVisible ? \"p-5 d-flex flex-column tabelaPedidoClientes\"\r\n                        : \"p-5 d-flex flex-column d-none tabelaPedidoClientes\"}>\r\n                        {status.type === 'error' ? <Alert color=\"danger\">{status.message}</Alert> : \"\"}\r\n                        <div className=\"w-100 p-4 border d-flex justify-content-center align-items-center headerTabela cor-branca text-center\"\r\n                            style={{ marginBottom: '5%' }}>\r\n                            <div>\r\n                                <FontAwesomeIcon icon=\"poll\" className=\"fonte-responsiva-icon\" style={{ color: 'var(--azul)' }} />\r\n                            </div>\r\n                            <div className=\"fonte-responsiva\" style={{ marginLeft: '5%' }}>\r\n                                Pedidos deste cliente\r\n                            </div>\r\n                        </div>\r\n                        <Table striped dark hover>\r\n                            <thead>\r\n                                <tr className=\"text-center\">\r\n                                    <th>ID Pedido</th>\r\n                                    <th>ID Cliente</th>\r\n                                    <th>ID Serviço</th>\r\n                                    <th>Valor</th>\r\n                                    <th>Data</th>\r\n                                    <th>Ações</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {dataServicoPedidos.map(item => (\r\n                                    <tr key={item.id} className=\"text-center\">\r\n                                        <td>{item.id}</td>\r\n                                        <td>{item.ClienteId} - {data.nome}</td>\r\n                                        <td>{item.ServicoId} - {item.nomeServico}</td>\r\n                                        <td>{item.valor}</td>\r\n                                        <td>{item.data}</td>\r\n                                        <td >\r\n                                            <Link to={\"/pedido/\" + item.id} className=\"btn btn-outline-primary btn-sm\">Consultar</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-center fonte-responsiva-pequena\">\r\n                            <span className=\"cor-texto-azul\">Valor total</span> - R$ {clienteGastou}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={msgNaoTemPedidosIsVisible ? \"p-5 d-flex flex-column tabelaPedidoClientes\"\r\n                        : \"p-5 d-flex flex-column d-none tabelaPedidoClientes\"}>\r\n                        {status.type === 'error' ? <Alert color=\"danger\">{status.message}</Alert> : \"\"}\r\n                        <div className=\"w-100 p-4 border d-flex justify-content-center align-items-center headerTabela cor-branca text-center\"\r\n                            style={{ marginBottom: '5%' }}>\r\n                            <div>\r\n                                <FontAwesomeIcon icon=\"poll\" className=\"fonte-responsiva-icon\" style={{ color: 'var(--azul)' }} />\r\n                            </div>\r\n                            <div className=\"fonte-responsiva\" style={{ marginLeft: '5%' }}>\r\n                                Esse cliente não tem pedidos!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-2 d-flex justify-content-center\" style={{ marginBottom: '2%' }}>\r\n                        <div className=\"p-2\">\r\n                            <Link to=\"/visualizarcliente\" className=\"btn btn-outline-primary btn-lg\">Voltar</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Pedido\\Pedido\\index.js",["223"],"import '../../../App.css';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport { api } from '../../../config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAddressCard, faFunnelDollar, faPoll, faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nlibrary.add(faAddressCard, faFunnelDollar, faPoll, faTrashAlt, faPencilAlt);\r\n\r\nexport const Pedido = (props) => {\r\n    console.log(props.match.params.id);\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [nomeCliente, setNomeCliente] = useState('');\r\n    const [enderecoCliente, setEnderecoCliente] = useState('');\r\n    const [cidadeCliente, setCidadeCliente] = useState('');\r\n    const [ufCliente, setUfCliente] = useState('');\r\n    const [nascimentoCliente, setNascimentoCliente] = useState('');\r\n    const [createdAtCliente, setCreatedAtCliente] = useState('');\r\n    const [clienteGastou, setClienteGastou] = useState('');\r\n\r\n    const [nomeServico, setNomeServico] = useState('');\r\n    const [descricaoServico, setDescricaoServico] = useState('');\r\n    const [createdAtServico, setCreatedAtServico] = useState('');\r\n    const [servicoLucroBruto, setServicoLucroBruto] = useState('');\r\n\r\n    const [id] = useState(props.match.params.id);\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        const getPedido = async () => {\r\n            await axios.get(api + \"/pedido/\" + id)\r\n                .then((response) => {\r\n                    console.log(response.data.pedido);\r\n                    setData(response.data.pedido);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                })\r\n        }\r\n        getPedido();\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        const getCliente = async () => {\r\n            await axios.get(api + \"/cliente/\" + data.ClienteId)\r\n                .then((response) => {\r\n                    setNomeCliente(response.data.cliente.nome);\r\n                    setEnderecoCliente(response.data.cliente.endereco);\r\n                    setCidadeCliente(response.data.cliente.cidade);\r\n                    setUfCliente(response.data.cliente.uf);\r\n                    setNascimentoCliente(response.data.cliente.nascimento);\r\n                    setCreatedAtCliente(response.data.cliente.createdAt);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                })\r\n        }\r\n        getCliente();\r\n    }, [data.ClienteId]);\r\n\r\n    useEffect(() => {\r\n        const getClienteGastou = async () => {\r\n            await axios.get(api + \"/clientegastou/\" + data.ClienteId)\r\n                .then((response) => {\r\n                    setClienteGastou(response.data.totalGastoCliente);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                })\r\n        }\r\n        getClienteGastou();\r\n    }, [data.ClienteId]);\r\n\r\n    useEffect(() => {\r\n        const getServico = async () => {\r\n            await axios.get(api + \"/servico/\" + data.ServicoId)\r\n                .then((response) => {\r\n                    setNomeServico(response.data.servico.nome);\r\n                    setDescricaoServico(response.data.servico.descricao);\r\n                    setCreatedAtServico(response.data.servico.createdAt);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                })\r\n        }\r\n        getServico();\r\n    }, [data.ServicoId]);\r\n\r\n    useEffect(() => {\r\n        const getServicoLucroBruto = async () => {\r\n            await axios.get(api + \"/servicolucroubruto/\" + data.ServicoId)\r\n                .then((response) => {\r\n                    setServicoLucroBruto(response.data.totalLucroBrutoServico);\r\n                })\r\n                .catch(() => {\r\n                    console.log(\"Erro: Não foi possível conectar a API.\");\r\n                })\r\n        }\r\n        getServicoLucroBruto();\r\n    }, [data.ServicoId]);\r\n\r\n\r\n    const [bitaoDeleteIsVisible, setBitaoDeleteIsVisible] = useState(true);\r\n    const [bitaoDeleteSimIsVisible, setBitaoDeleteSimIsVisible] = useState(true);\r\n    const [bitaoDeleteNaoIsVisible, setBitaoDeleteNaoIsVisible] = useState(true);\r\n    const [bitaoDeleteCtzaIsVisible, setBitaoDeleteCtzaIsVisible] = useState(true);\r\n\r\n    function mudarBitaoDeleteInvisivel() { setBitaoDeleteIsVisible(!bitaoDeleteIsVisible) }\r\n    function mudarBitaoDeleteSimInvisivel() { setBitaoDeleteSimIsVisible(!bitaoDeleteSimIsVisible) }\r\n    function mudarBitaoDeleteNaoInvisivel() { setBitaoDeleteNaoIsVisible(!bitaoDeleteNaoIsVisible) }\r\n    function mudarBitaoDeleteCtzaInvisivel() { setBitaoDeleteCtzaIsVisible(!bitaoDeleteCtzaIsVisible) }\r\n\r\n    function juntarFunctions() {\r\n        mudarBitaoDeleteInvisivel();\r\n        mudarBitaoDeleteSimInvisivel();\r\n        mudarBitaoDeleteNaoInvisivel();\r\n        mudarBitaoDeleteCtzaInvisivel();\r\n    }\r\n\r\n    const [voltarTabela, setVoltarTabela] = useState({\r\n        redirect: false\r\n    });\r\n\r\n    const apagarPedido = async (idPedido) => {\r\n\r\n        juntarFunctions();\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        await axios.delete(api + \"/apagarpedido/\" + idPedido, { headers })\r\n            .then((response) => {\r\n                console.log(response.data.error);\r\n                setVoltarTabela({ redirect: true })\r\n            }).catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível acessar a API.'\r\n                })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {voltarTabela.redirect ? (<Redirect push to=\"/visualizarpedido\" />) : null}\r\n            <Container>\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                    <div className=\"w-100 d-flex justify-content-center align-items-center\" style={{ marginTop: '1.5%', marginBottom: '2%' }}>\r\n                        <div className=\"w-75 p-4 border d-flex justify-content-center align-items-center headerTabela cor-branca\">\r\n                            <div className=\"w-100 d-flex p-2 justify-content-center align-items-center\">\r\n                                <div>\r\n                                    <FontAwesomeIcon icon=\"poll\" className=\"fonte-responsiva-icon\" style={{ color: 'var(--azul)' }} />\r\n                                </div>\r\n                                <div className=\"fonte-responsiva\" style={{ marginLeft: '5%' }}>\r\n                                    {id} - R$ {data.valor}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"p-2 d-flex justify-content-center\">\r\n                        <a href={\"/editarpedido/\" + id} className=\"d-flex text-center align-items-center btn btn-outline-warning btn-lg\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon=\"pencil-alt\" className=\"fonte-responsiva-icon-pequena warning\" />\r\n                            </div>\r\n                            <div className=\"p-2 fonte-responsiva-pequena\">\r\n                                Editar este pedido\r\n                            </div>\r\n                        </a>\r\n\r\n                        <div className=\"d-flex justify-content-center align-items-center\" style={{ marginLeft: '0.75rem' }}>\r\n                            <span onClick={juntarFunctions} className={bitaoDeleteIsVisible ? \"d-flex text-center align-items-center btn btn-outline-danger btn-lg\"\r\n                                : \"d-flex text-center align-items-center btn btn-outline-danger btn-lg d-none\"}>\r\n                                <div>\r\n                                    <FontAwesomeIcon icon=\"trash-alt\" className=\"fonte-responsiva-icon-pequena danger\" />\r\n                                </div>\r\n                                <div className=\"p-2 fonte-responsiva-pequena\">\r\n                                    Excluir este pedido\r\n                                </div>\r\n                            </span>\r\n\r\n                            <span className={bitaoDeleteCtzaIsVisible ? \"btn btn-outline-danger btn-lg disabled d-none\"\r\n                                : \"btn btn-outline-danger btn-lg disabled\"}>Tem certeza?</span>\r\n\r\n                            <span onClick={() => apagarPedido(id)} className={bitaoDeleteSimIsVisible ? \"btn btn-outline-danger btn-lg d-none\"\r\n                                : \"btn btn-outline-danger btn-lg\"} style={{ marginLeft: '0.5rem' }}>Sim</span>\r\n\r\n                            <span onClick={juntarFunctions} className={bitaoDeleteNaoIsVisible ? \"btn btn-outline-success btn-lg d-none\"\r\n                                : \"btn btn-outline-success btn-lg\"} style={{ marginLeft: '0.5rem' }}>Não</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"w-75 m-3 d-flex\">\r\n                        <div className=\"w-100 p-4 border d-flex headerTabela cor-branca\">\r\n                            <div className=\"w-100 d-flex flex-column p-2 text-center fonte-responsiva-pequena\">\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">ID Cliente</span> - {data.ClienteId}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Nome do Cliente</span> - {nomeCliente}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Consultar</span> - <Link to={\"/cliente/\" + data.ClienteId}\r\n                                        className=\"btn btn-outline-primary btn-md\">Cliente</Link>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\"> <br /> </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">ID Serviço</span> - {data.ServicoId}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Nome do Serviço</span> - {nomeServico}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Consultar</span> - <Link to={\"/servico/\" + data.ServicoId}\r\n                                        className=\"btn btn-outline-primary btn-md\">Serviço</Link>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\"> <br /> </span>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Valor do Pedido</span> - R$ {data.valor}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Data do Pedido</span> - {data.data}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Data de criação</span> - {data.createdAt}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"w-100 d-flex justify-content-center align-items-center\" style={{ marginTop: '1.5%', marginBottom: '2%' }}>\r\n                        <div className=\"w-75 p-4 border d-flex flex-column justify-content-center align-items-center headerTabela cor-branca\">\r\n                            <div className=\"w-100 d-flex p-2 justify-content-center align-items-center\">\r\n                                <div className=\"fonte-responsiva\">\r\n                                    Detalhes\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"w-100 d-flex p-2 justify-content-center align-items-center\">\r\n                                <div className=\"w-50 d-flex p-2 justify-content-center align-items-center\">\r\n                                    <div>\r\n                                        <FontAwesomeIcon icon=\"address-card\" className=\"fonte-responsiva-icon-media\" style={{ color: 'var(--azul)' }} />\r\n                                    </div>\r\n                                    <div className=\"fonte-responsiva-media\" style={{ marginLeft: '5%' }}>\r\n                                        {data.ClienteId} - {nomeCliente}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"w-50 d-flex p-2 justify-content-center align-items-center\">\r\n                                    <div>\r\n                                        <FontAwesomeIcon icon=\"funnel-dollar\" className=\"fonte-responsiva-icon-media\" style={{ color: 'var(--azul)' }} />\r\n                                    </div>\r\n                                    <div className=\"fonte-responsiva-media\" style={{ marginLeft: '5%' }}>\r\n                                        {data.ServicoId} - {nomeServico}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"w-75 m-3 d-flex\">\r\n                        <div className=\"w-50 p-4 border d-flex headerTabela cor-branca\">\r\n                            <div className=\"w-100 d-flex flex-column p-2 text-center fonte-responsiva-pequena\">\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Nome</span> - {nomeCliente}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Endereço</span> - {enderecoCliente}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Cidade</span> - {cidadeCliente}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">UF</span> - {ufCliente}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Nascimento</span> - {nascimentoCliente}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Data de criação</span> - {createdAtCliente}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Total gasto</span> - R$ {clienteGastou}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"w-50 p-4 border d-flex headerTabela cor-branca\" style={{ marginLeft: \"0.75em\" }}>\r\n                            <div className=\"w-100 d-flex flex-column p-2 text-center fonte-responsiva-pequena\">\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Nome</span> - {nomeServico}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Descrição</span> - {descricaoServico}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Data de criação</span> - {createdAtServico}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"cor-texto-azul\">Total bruto recebido</span> - R$ {servicoLucroBruto}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"m-3 d-flex justify-content-center\" style={{ marginBottom: '2%' }}>\r\n                        <div className=\"p-2\">\r\n                            <Link to=\"/visualizarpedido\" className=\"btn btn-outline-primary btn-lg\">Voltar</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Servico\\Cadastrar\\index.js",[],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Servico\\Editar\\index.js",[],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Cliente\\Editar\\index.js",[],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Cliente\\Cadastrar\\index.js",[],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Pedido\\Editar\\index.js",[],"G:\\repo teste\\ciclo 4 dia 1\\aula\\frontend\\src\\pages(view)\\Pedido\\Cadastrar\\index.js",[],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\index.js",[],["224","225"],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\App.js",[],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\components\\Menu.js",[],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Home\\index.js",[],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Cliente\\Cadastrar\\index.js",[],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Cliente\\Cliente\\index.js",["226"],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Pedido\\Editar\\index.js",[],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Cliente\\Editar\\index.js",[],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Pedido\\Pedido\\index.js",["227"],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Servico\\Cadastrar\\index.js",[],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Pedido\\Cadastrar\\index.js",[],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Pedido\\VisualizarPedido\\index.js",["228"],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Cliente\\VisualizarCliente\\index.js",["229"],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Servico\\VisualizarServico\\index.js",["230"],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Servico\\Servico\\index.js",["231"],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\pages(view)\\Servico\\Editar\\index.js",[],"G:\\TI Academy\\Ciclo 4 - ReactJS\\frontend\\src\\config\\index.js",[],"F:\\DeployTeste\\src\\index.js",[],"F:\\DeployTeste\\src\\App.js",[],"F:\\DeployTeste\\src\\components\\Menu.js",[],"F:\\DeployTeste\\src\\pages(view)\\Home\\index.js",[],"F:\\DeployTeste\\src\\pages(view)\\Cliente\\VisualizarCliente\\index.js",["232"],"F:\\DeployTeste\\src\\pages(view)\\Cliente\\Editar\\index.js",[],"F:\\DeployTeste\\src\\pages(view)\\Cliente\\Cliente\\index.js",["233"],"F:\\DeployTeste\\src\\pages(view)\\Pedido\\Pedido\\index.js",["234"],"F:\\DeployTeste\\src\\pages(view)\\Pedido\\VisualizarPedido\\index.js",["235"],"import '../../../App.css';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Alert, Container, Table } from \"reactstrap\";\r\n\r\nimport { api } from '../../../config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPoll } from '@fortawesome/free-solid-svg-icons';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nlibrary.add(faPoll);\r\n\r\nexport const VisualizarPedido = () => {\r\n\r\n    const [bitaoDeleteIsVisible, setBitaoDeleteIsVisible] = useState(true);\r\n    const [bitaoDeleteSimIsVisible, setBitaoDeleteSimIsVisible] = useState(true);\r\n    const [bitaoDeleteNaoIsVisible, setBitaoDeleteNaoIsVisible] = useState(true);\r\n    const [bitaoDeleteCtzaIsVisible, setBitaoDeleteCtzaIsVisible] = useState(true);\r\n\r\n    function mudarBitaoDeleteInvisivel() { setBitaoDeleteIsVisible(!bitaoDeleteIsVisible) }\r\n    function mudarBitaoDeleteSimInvisivel() { setBitaoDeleteSimIsVisible(!bitaoDeleteSimIsVisible) }\r\n    function mudarBitaoDeleteNaoInvisivel() { setBitaoDeleteNaoIsVisible(!bitaoDeleteNaoIsVisible) }\r\n    function mudarBitaoDeleteCtzaInvisivel() { setBitaoDeleteCtzaIsVisible(!bitaoDeleteCtzaIsVisible) }\r\n\r\n    function juntarFunctions() {\r\n        mudarBitaoDeleteInvisivel();\r\n        mudarBitaoDeleteSimInvisivel();\r\n        mudarBitaoDeleteNaoInvisivel();\r\n        mudarBitaoDeleteCtzaInvisivel();\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n    const [dataClientes, setDataClientes] = useState([]);\r\n    const [dataServicos, setDataServicos] = useState([]);\r\n\r\n    const [numPedidos, setNumPedidos] = useState([]);\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    const getPedidos = async () => {\r\n        await axios.get(api + radio)\r\n            .then((response) => {\r\n                setData(response.data.pedidos);\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível conectar a API.'\r\n                })\r\n            });\r\n    }\r\n\r\n    const getClientes = async () => {\r\n        await axios.get(api + \"/listaclientes\")\r\n            .then((response) => {\r\n                setDataClientes(response.data.clientes);\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível conectar a API.'\r\n                })\r\n            });\r\n    }\r\n\r\n    const getServicos = async () => {\r\n        await axios.get(api + \"/listaservicos\")\r\n            .then((response) => {\r\n                setDataServicos(response.data.servicos);\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível conectar a API.'\r\n                })\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getNumPedidos = async () => {\r\n            await axios.get(api + \"/numpedidos\")\r\n                .then((response) => {\r\n                    setNumPedidos(response.data.pedidos);\r\n                })\r\n                .catch(() => {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        message: 'Erro: Não foi possível conectar a API.'\r\n                    })\r\n                });\r\n        }\r\n        getNumPedidos();\r\n    },[]);\r\n\r\n    const apagarPedido = async (idPedido) => {\r\n        console.log(idPedido);\r\n\r\n        juntarFunctions();\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        await axios.delete(api + \"/apagarpedido/\" + idPedido, { headers })\r\n            .then((response) => {\r\n                console.log(response.data.error);\r\n                getPedidos();\r\n            }).catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível acessar a API.'\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPedidos();\r\n        getClientes();\r\n        getServicos();\r\n    }, []);\r\n\r\n\r\n    /* Aqui temos um loop while para adicionar novas propriedades na matriz \"data\" dos pedidos\r\n    Em síntese, estamos colocando o nome dos Clientes e Serviços ao lado de seus IDs na tabela*/\r\n    var x = 0;\r\n    var y = 0;\r\n    var z = 0;\r\n\r\n    var i = data.length;\r\n    var j = dataClientes.length;\r\n    var k = dataServicos.length;\r\n\r\n    if ((data[x] !== undefined) && (dataClientes[y] !== undefined)) {\r\n        while (x < i) {\r\n            while (y < j) {\r\n                if (data[x].ClienteId === dataClientes[y].id) {\r\n                    data[x].nomeCliente = dataClientes[y].nome;\r\n                }\r\n                y++;\r\n            }\r\n\r\n            while (z < k) {\r\n                if (data[x].ServicoId === dataServicos[z].id) {\r\n                    data[x].nomeServico = dataServicos[z].nome;\r\n                }\r\n                z++;\r\n            }\r\n\r\n            z = 0;\r\n            y = 0;\r\n            x++;\r\n        }\r\n    }\r\n\r\n    const [radio, setRadio] = useState(\"/listapedidos\");\r\n\r\n    while ((radio !== \"/listapedidos\") || (radio !== \"/listapedidosclienteid\") || (radio !== \"/listapedidosservicoid\") ||\r\n        (radio !== \"/listapedidosvalor\") || (radio !== \"/listapedidosdata\")) {\r\n        getPedidos();\r\n        break;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <div className=\"w-100 d-flex justify-content-center align-items-center\" style={{ marginTop: '2.5%' }}>\r\n                    <div className=\"w-75 p-4 border d-flex justify-content-center align-items-center headerTabela cor-branca\">\r\n                        <div className=\"w-100 d-flex p-2 justify-content-center align-items-center\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon=\"poll\" className=\"fonte-responsiva-icon\" style={{ color: 'var(--azul)' }} />\r\n                            </div>\r\n                            <div style={{ marginLeft: '5%', fontSize: 'var(--fontegrande)' }}>\r\n                                Tabela dos Pedidos\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"p-2 d-flex justify-content-center\" style={{ marginTop: '2.5%' }}>\r\n                    <div className=\"p-2\">\r\n                        <label className=\"btn btn-outline-primary disabled\" htmlFor=\"option1\">Ordenar por</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option1\" autoComplete=\"off\"\r\n                            checked={radio === \"/listapedidos\"} value=\"/listapedidos\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option1\">ID</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option2\" autoComplete=\"off\"\r\n                            checked={radio === \"/listapedidosclienteid\"} value=\"/listapedidosclienteid\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option2\">ID Cliente</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option3\" autoComplete=\"off\"\r\n                            checked={radio === \"/listapedidosservicoid\"} value=\"/listapedidosservicoid\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option3\">ID Serviço</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option4\" autoComplete=\"off\"\r\n                            checked={radio === \"/listapedidosvalor\"} value=\"/listapedidosvalor\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option4\">Valor</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option5\" autoComplete=\"off\"\r\n                            checked={radio === \"/listapedidosdata\"} value=\"/listapedidosdata\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option5\">Data</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"p-2 d-flex flex-column\">\r\n                    {status.type === 'error' ? <Alert color=\"danger\">{status.message}</Alert> : \"\"}\r\n                    <Table striped dark hover>\r\n                        <thead>\r\n                            <tr className=\"text-center\">\r\n                                <th>ID Pedido</th>\r\n                                <th>ID Cliente</th>\r\n                                <th>ID Serviço</th>\r\n                                <th>Valor</th>\r\n                                <th>Data</th>\r\n                                <th colSpan=\"3\">Ações</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.map(item => (\r\n                                <tr className=\"text-center\" key={item.id}>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.ClienteId} - {item.nomeCliente}</td>\r\n                                    <td>{item.ServicoId} - {item.nomeServico}</td>\r\n                                    <td>{item.valor}</td>\r\n                                    <td>{item.data}</td>\r\n                                    <td>\r\n                                        <Link to={\"/pedido/\" + item.id} className=\"btn btn-outline-primary btn-sm\">Consultar</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link to={\"/editarpedido/\" + item.id} className=\"btn btn-outline-warning btn-sm\">Editar</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <span onClick={juntarFunctions} className={bitaoDeleteIsVisible ? \"btn btn-outline-danger btn-sm\"\r\n                                            : \"btn btn-outline-danger btn-sm d-none\"}>Deletar</span>\r\n\r\n                                        <span className={bitaoDeleteCtzaIsVisible ? \"btn btn-outline-danger btn-sm disabled d-none\"\r\n                                            : \"btn btn-outline-danger btn-sm disabled\"}>Tem certeza?</span>\r\n\r\n                                        <span onClick={() => apagarPedido(item.id)} className={bitaoDeleteSimIsVisible ? \"btn btn-outline-danger btn-sm d-none\"\r\n                                            : \"btn btn-outline-danger btn-sm\"} style={{ marginLeft: '0.5rem' }}>Sim</span>\r\n\r\n                                        <span onClick={juntarFunctions} className={bitaoDeleteNaoIsVisible ? \"btn btn-outline-success btn-sm d-none\"\r\n                                            : \"btn btn-outline-success btn-sm\"} style={{ marginLeft: '0.5rem' }}>Não</span>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <div className=\"text-center fonte-responsiva-pequena\">\r\n                        <span className=\"cor-texto-azul\">Número de pedidos</span> - {numPedidos}\r\n                    </div>\r\n\r\n                    <div className=\"p-2 d-flex justify-content-center\">\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/cadastrarpedido\" className=\"btn btn-outline-success btn-lg\">Criar novo pedido</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\" style={{ marginBottom: '2%' }}>\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/\" className=\"btn btn-outline-primary btn-lg\">Voltar</a>\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/visualizarcliente\" className=\"btn btn-outline-primary btn-lg\">Clientes</a>\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/visualizarservico\" className=\"btn btn-outline-primary btn-lg\">Serviços</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","F:\\DeployTeste\\src\\pages(view)\\Servico\\Servico\\index.js",["236"],"F:\\DeployTeste\\src\\pages(view)\\Cliente\\Cadastrar\\index.js",[],"F:\\DeployTeste\\src\\pages(view)\\Servico\\VisualizarServico\\index.js",["237"],"import '../../../App.css';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Alert, Container, Table } from \"reactstrap\";\r\n\r\nimport { api } from '../../../config';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFunnelDollar } from '@fortawesome/free-solid-svg-icons';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nlibrary.add(faFunnelDollar);\r\n\r\nexport const VisualizarServico = () => {\r\n\r\n\r\n    /* Implementação de um evento para confirmar se o usuário realmente quer deletar algum item da lista\r\n    \r\n    Ou seja, ao clicar no botão \"Deletar serviço\", ele se transforma em uma mensagem perguntando se\r\n    o usuário tem certeza, seguido de dois botões \"Sim\" e \"Não\".\r\n\r\n    Caso o usuário clicar no botão \"Não\", esses três elementos se transformam novamente em um único botão\r\n    \"Deletar serviço\".\r\n\r\n    Caso o usuário clicar no botão \"Sim\", a função apagarServico é executado e o serviço selecionado é excluído\r\n\r\n\r\n    Em síntese, para atinger este efeito, criamos várias contantes para todos os quatro elementos:\r\n    \"Deletar Serviço\", \"Tem certeza?\", \"Sim\" e \"Não\"\r\n    Essas constantes utilizam a função useState do react com a lógica booleana \"true\" ou \"false\"\r\n\r\n    Dessa forma, conseguimos criar uma pequena lógica para controlar a visibilidade desses elementos\r\n\r\n    Inicialmente, apenas o botão \"Deletar Serviço\" está visível, os demais possuem o className \"d-none\" que os\r\n    torna invisíveis, porém, quando o usuário clica neste botão a situação inverte, removemos essa classe dos\r\n    elementos deixando visíveis, e adicionamos \"d-none\" ao botão \"Deletar Serviço\", deixando-o invisível */\r\n    const [bitaoDeleteIsVisible, setBitaoDeleteIsVisible] = useState(true);\r\n    const [bitaoDeleteSimIsVisible, setBitaoDeleteSimIsVisible] = useState(true);\r\n    const [bitaoDeleteNaoIsVisible, setBitaoDeleteNaoIsVisible] = useState(true);\r\n    const [bitaoDeleteCtzaIsVisible, setBitaoDeleteCtzaIsVisible] = useState(true);\r\n\r\n    /* Essa mudança de estado é possível através destas quatro funções abaixo, que manipulam a lógica\r\n    booleana de cada elemento de \"true\" para \"false\" ou vice-versa */\r\n    function mudarBitaoDeleteInvisivel() { setBitaoDeleteIsVisible(!bitaoDeleteIsVisible) }\r\n    function mudarBitaoDeleteSimInvisivel() { setBitaoDeleteSimIsVisible(!bitaoDeleteSimIsVisible) }\r\n    function mudarBitaoDeleteNaoInvisivel() { setBitaoDeleteNaoIsVisible(!bitaoDeleteNaoIsVisible) }\r\n    function mudarBitaoDeleteCtzaInvisivel() { setBitaoDeleteCtzaIsVisible(!bitaoDeleteCtzaIsVisible) }\r\n\r\n    /* Para simplificar a sintaxe do parametro onClick={} dos botões, criamos uma nova função \"mestre\"\r\n    que chama todas as demais conforme necessário */\r\n    function juntarFunctions() {\r\n        mudarBitaoDeleteInvisivel();\r\n        mudarBitaoDeleteSimInvisivel();\r\n        mudarBitaoDeleteNaoInvisivel();\r\n        mudarBitaoDeleteCtzaInvisivel();\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [numServicos, setNumServicos] = useState([]);\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        message: ''\r\n    });\r\n\r\n    const getServicos = async () => {\r\n        await axios.get(api + radio)\r\n            .then((response) => {\r\n                setData(response.data.servicos);\r\n            })\r\n            .catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível conectar a API.'\r\n                })\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getNumServicos = async () => {\r\n            await axios.get(api + \"/numservicos\")\r\n                .then((response) => {\r\n                    setNumServicos(response.data.servicos);\r\n                })\r\n                .catch(() => {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        message: 'Erro: Não foi possível conectar a API.'\r\n                    })\r\n                });\r\n        }\r\n        getNumServicos();\r\n    },[]);\r\n\r\n    const apagarServico = async (idServico) => {\r\n        console.log(idServico);\r\n\r\n        /* Pelas mesmas razões expostas em comentários acima, chamamos a função \"juntarFunctions\" para\r\n        simplificar a sintaxe do parametro onClick={}*/\r\n        juntarFunctions();\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        await axios.delete(api + \"/apagarservico/\" + idServico, { headers })\r\n            .then((response) => {\r\n                console.log(response.data.error);\r\n                getServicos();\r\n            }).catch(() => {\r\n                setStatus({\r\n                    type: 'error',\r\n                    message: 'Erro: Não foi possível acessar a API.'\r\n                })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getServicos();\r\n    }, []);\r\n\r\n    const [radio, setRadio] = useState(\"/listaservicos\");\r\n\r\n    while ((radio !== \"/listaservicos\") || (radio !== \"/listaservicosnome\") || (radio !== \"/listaservicosdescricao\") ||\r\n        (radio !== \"/listaservicosdata\")) {\r\n        getServicos();\r\n        break;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <div className=\"w-100 d-flex justify-content-center align-items-center\" style={{ marginTop: '2.5%' }}>\r\n                    <div className=\"w-75 p-4 border d-flex justify-content-center align-items-center headerTabela cor-branca\">\r\n                        <div className=\"w-100 d-flex p-2 justify-content-center align-items-center\">\r\n                            <div>\r\n                                <FontAwesomeIcon icon=\"funnel-dollar\" className=\"fonte-responsiva-icon\" style={{ color: 'var(--azul)' }} />\r\n                            </div>\r\n                            <div style={{ marginLeft: '5%', fontSize: 'var(--fontegrande)' }}>\r\n                                Tabela dos Serviços\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"p-2 d-flex justify-content-center\" style={{ marginTop: '2.5%' }}>\r\n                    <div className=\"p-2\">\r\n                        <label className=\"btn btn-outline-primary disabled\" htmlFor=\"option1\">Ordenar por</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option1\" autoComplete=\"off\"\r\n                            checked={radio === \"/listaservicos\"} value=\"/listaservicos\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option1\">ID</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option2\" autoComplete=\"off\"\r\n                            checked={radio === \"/listaservicosnome\"} value=\"/listaservicosnome\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option2\">Nome</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option3\" autoComplete=\"off\"\r\n                            checked={radio === \"/listaservicosdescricao\"} value=\"/listaservicosdescricao\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option3\">Descrição</label>\r\n                    </div>\r\n                    <div className=\"p-2\">\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"options\" id=\"option4\" autoComplete=\"off\"\r\n                            checked={radio === \"/listaservicosdata\"} value=\"/listaservicosdata\" onChange={(e) => { setRadio(e.target.value) }}></input>\r\n                        <label className=\"btn btn-outline-primary\" htmlFor=\"option4\">Data</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"p-2 d-flex flex-column\">\r\n                    {status.type === 'error' ? <Alert color=\"danger\">{status.message}</Alert> : \"\"}\r\n                    <Table striped dark hover>\r\n                        <thead>\r\n                            <tr className=\"text-center\">\r\n                                <th>ID</th>\r\n                                <th>Serviço</th>\r\n                                <th>Descrição</th>\r\n                                <th>Criado em</th>\r\n                                <th colSpan=\"3\">Ações</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.map(item => (\r\n                                <tr className=\"text-center\" key={item.id}>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.nome}</td>\r\n                                    <td>{item.descricao}</td>\r\n                                    <td>{item.createdAt}</td>\r\n                                    <td>\r\n                                        <Link to={\"/servico/\" + item.id} className=\"btn btn-outline-primary btn-sm\">Consultar</Link>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Link to={\"/editarservico/\" + item.id} className=\"btn btn-outline-warning btn-sm\">Editar</Link>\r\n                                    </td>\r\n                                    <td>\r\n\r\n                                        {/* Aqui, temos a nossa lógica do botão deletar, note que o className de cada elemento está baseado\r\n                                        em uma lógica condicional if else\r\n                                        \r\n                                        Inicialmente todos estão \"true\", por isso que contém \"d-none\" no final, com a excessão do botão\r\n                                        \"Deletar Serviço\" que é o único visível quando esta página de visualizar serviços é carregada\r\n                                        \r\n                                        Caso o usuário clique nesse botão a situação inverte, e todos ficam \"false\" e novamente apenas\r\n                                        o botão \"Deletar Serviço\" contém \"d-none\" no seu else, assim ele fica invisível enquanto os outros\r\n                                        elementos ficam visíveis*/}\r\n                                        <span onClick={juntarFunctions} className={bitaoDeleteIsVisible ? \"btn btn-outline-danger btn-sm\"\r\n                                            : \"btn btn-outline-danger btn-sm d-none\"}>Deletar</span>\r\n\r\n                                        <span className={bitaoDeleteCtzaIsVisible ? \"btn btn-outline-danger btn-sm disabled d-none\"\r\n                                            : \"btn btn-outline-danger btn-sm disabled\"}>Tem certeza?</span>\r\n\r\n                                        <span onClick={() => apagarServico(item.id)} className={bitaoDeleteSimIsVisible ? \"btn btn-outline-danger btn-sm d-none\"\r\n                                            : \"btn btn-outline-danger btn-sm\"} style={{ marginLeft: '0.5rem' }}>Sim</span>\r\n\r\n                                        <span onClick={juntarFunctions} className={bitaoDeleteNaoIsVisible ? \"btn btn-outline-success btn-sm d-none\"\r\n                                            : \"btn btn-outline-success btn-sm\"} style={{ marginLeft: '0.5rem' }}>Não</span>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    <div className=\"text-center fonte-responsiva-pequena\">\r\n                        <span className=\"cor-texto-azul\">Número de serviços</span> - {numServicos}\r\n                    </div>\r\n\r\n                    <div className=\"p-2 d-flex justify-content-center\">\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/cadastrarservico\" className=\"btn btn-outline-success btn-lg\">Criar novo serviço</a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center\" style={{ marginBottom: '8%' }}>\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/\" className=\"btn btn-outline-primary btn-lg\">Voltar</a>\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/visualizarcliente\" className=\"btn btn-outline-primary btn-lg\">Clientes</a>\r\n                        </div>\r\n                        <div className=\"p-2\">\r\n                            <a href=\"/visualizarpedido\" className=\"btn btn-outline-primary btn-lg\">Pedidos</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","F:\\DeployTeste\\src\\pages(view)\\Pedido\\Editar\\index.js",[],"F:\\DeployTeste\\src\\pages(view)\\Servico\\Cadastrar\\index.js",[],"F:\\DeployTeste\\src\\pages(view)\\Servico\\Editar\\index.js",[],"F:\\DeployTeste\\src\\pages(view)\\Pedido\\Cadastrar\\index.js",[],"F:\\DeployTeste\\src\\config\\index.js",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":95,"column":8,"nodeType":"244","endLine":95,"endColumn":10,"suggestions":"245"},{"ruleId":"242","severity":1,"message":"246","line":123,"column":8,"nodeType":"244","endLine":123,"endColumn":10,"suggestions":"247"},{"ruleId":"242","severity":1,"message":"248","line":127,"column":8,"nodeType":"244","endLine":127,"endColumn":10,"suggestions":"249"},{"ruleId":"242","severity":1,"message":"250","line":85,"column":8,"nodeType":"244","endLine":85,"endColumn":12,"suggestions":"251"},{"ruleId":"242","severity":1,"message":"250","line":85,"column":8,"nodeType":"244","endLine":85,"endColumn":12,"suggestions":"252"},{"ruleId":"253","severity":1,"message":"254","line":33,"column":12,"nodeType":"255","messageId":"256","endLine":33,"endColumn":18},{"ruleId":"238","replacedBy":"257"},{"ruleId":"240","replacedBy":"258"},{"ruleId":"242","severity":1,"message":"250","line":85,"column":8,"nodeType":"244","endLine":85,"endColumn":12,"suggestions":"259"},{"ruleId":"253","severity":1,"message":"254","line":33,"column":12,"nodeType":"255","messageId":"256","endLine":33,"endColumn":18},{"ruleId":"242","severity":1,"message":"248","line":124,"column":8,"nodeType":"244","endLine":124,"endColumn":10,"suggestions":"260"},{"ruleId":"242","severity":1,"message":"243","line":95,"column":8,"nodeType":"244","endLine":95,"endColumn":10,"suggestions":"261"},{"ruleId":"242","severity":1,"message":"246","line":122,"column":8,"nodeType":"244","endLine":122,"endColumn":10,"suggestions":"262"},{"ruleId":"242","severity":1,"message":"250","line":85,"column":8,"nodeType":"244","endLine":85,"endColumn":12,"suggestions":"263"},{"ruleId":"242","severity":1,"message":"243","line":95,"column":8,"nodeType":"244","endLine":95,"endColumn":10,"suggestions":"264"},{"ruleId":"242","severity":1,"message":"250","line":85,"column":8,"nodeType":"244","endLine":85,"endColumn":12,"suggestions":"265"},{"ruleId":"253","severity":1,"message":"254","line":33,"column":12,"nodeType":"255","messageId":"256","endLine":33,"endColumn":18},{"ruleId":"242","severity":1,"message":"248","line":124,"column":8,"nodeType":"244","endLine":124,"endColumn":10,"suggestions":"266"},{"ruleId":"242","severity":1,"message":"250","line":85,"column":8,"nodeType":"244","endLine":85,"endColumn":12,"suggestions":"267"},{"ruleId":"242","severity":1,"message":"246","line":122,"column":8,"nodeType":"244","endLine":122,"endColumn":10,"suggestions":"268"},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getClientes'. Either include it or remove the dependency array.","ArrayExpression",["271"],"React Hook useEffect has a missing dependency: 'getServicos'. Either include it or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'getPedidos'. Either include it or remove the dependency array.",["273"],"React Hook useEffect has missing dependencies: 'msgNaoTemPedidosIsVisible' and 'tabelaPedidosIsVisible'. Either include them or remove the dependency array. You can also do a functional update 'setTabelaPedidosIsVisible(t => ...)' if you only need 'tabelaPedidosIsVisible' in the 'setTabelaPedidosIsVisible' call.",["274"],["275"],"no-unused-vars","'status' is assigned a value but never used.","Identifier","unusedVar",["269"],["270"],["276"],["277"],["278"],["279"],["280"],["281"],["282"],["283"],["284"],["285"],"no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},{"desc":"292","fix":"295"},{"desc":"290","fix":"296"},{"desc":"286","fix":"297"},{"desc":"288","fix":"298"},{"desc":"292","fix":"299"},{"desc":"286","fix":"300"},{"desc":"292","fix":"301"},{"desc":"290","fix":"302"},{"desc":"292","fix":"303"},{"desc":"288","fix":"304"},"Update the dependencies array to be: [getClientes]",{"range":"305","text":"306"},"Update the dependencies array to be: [getServicos]",{"range":"307","text":"308"},"Update the dependencies array to be: [getPedidos]",{"range":"309","text":"310"},"Update the dependencies array to be: [id, msgNaoTemPedidosIsVisible, tabelaPedidosIsVisible]",{"range":"311","text":"312"},{"range":"313","text":"312"},{"range":"314","text":"312"},{"range":"315","text":"310"},{"range":"316","text":"306"},{"range":"317","text":"308"},{"range":"318","text":"312"},{"range":"319","text":"306"},{"range":"320","text":"312"},{"range":"321","text":"310"},{"range":"322","text":"312"},{"range":"323","text":"308"},[3223,3225],"[getClientes]",[4995,4997],"[getServicos]",[4331,4333],"[getPedidos]",[3219,3223],"[id, msgNaoTemPedidosIsVisible, tabelaPedidosIsVisible]",[3131,3135],[3131,3135],[4170,4172],[3223,3225],[4941,4943],[3219,3223],[3223,3225],[3131,3135],[4170,4172],[3219,3223],[4941,4943]]